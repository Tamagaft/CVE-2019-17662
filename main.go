package main

import (
	"flag"
	"fmt"
	"net"
)

type arguments struct {
	banner bool
	host   string
	port   int
	file   string
	ssl    bool
}

func printBanner(b bool) {
	banner := `	
     _____ _     _    __     ___   _  ____ 
    |_   _| |__ (_)_ _\ \   / / \ | |/ ___|
      | | | '_ \| | '_ \ \ / /|  \| | |    
      | | | | | | | | | \ V / | |\  | |___ 
      |_| |_| |_|_|_| |_|\_/  |_| \_|\____|

					   @Tamagaft`
	if !b {
		fmt.Print(banner, "\n")
	}
}

func exploit(args arguments) {
	ips, _ := net.LookupIP("1.1.1.1")
	if ipv4 := ips[0].To4(); ipv4 != nil {
		fmt.Println("IPv4:", ipv4)
	}

}

func main() {

	args := arguments{}
	args.banner = *flag.Bool("accessible", false, "Remove banners and make exploit friendly for screen readers")
	args.host = *flag.String("host", "google.com", "The target IP or domain")
	args.port = *flag.Int("port", 0, "The target port (1-65535)")
	args.file = *flag.String("flag", "../ThinVnc.ini", "The file to read (default: ../ThinVnc.ini")
	args.ssl = *flag.Bool("ssl", false, "Does the server use SSL?")
	flag.Parse()
	fmt.Print(args)

	printBanner(args.banner)
	exploit(args)

}
